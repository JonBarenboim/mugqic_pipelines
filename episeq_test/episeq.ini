
[DEFAULT]
###############################################################################
## Settings here applies to all jobs where settings are not defined under    ##
## a specific headding. Settings are organized by job names of the pipeline. ##
## They are not neccessairly not the same names as the step.                 ##
###############################################################################
# Cluster and qsub syntax definitions
cluster_submit_cmd=qsub
cluster_submit_cmd_suffix= | grep "[0-9]"
cluster_work_dir_arg=-d
cluster_output_dir_arg=-j oe -o
cluster_job_name_arg=-N
cluster_cmd_produces_job_id=true
cluster_dependency_arg=-W depend=afterok:
cluster_dependency_sep=:
cluster_max_jobs=10000
tmp_dir=/localhd/$PBS_JOBID
use_localhd=yes

## Change the following values if you wish to use a different version of any
## of the available modules on your cluster. Do note that this may change
## the final output and should be noted for analysis and reproducibility.
# Modules
module_bismark=bismark/0.16.3
module_bowtie2=mugqic/bowtie2/2.2.4
module_cutadapt=cutadapt/1.10
module_fastqc=mugqic/fastqc/0.11.2
module_java=mugqic/java/openjdk-jdk1.8.0_72
module_mugqic=mugqic-pipelines/2.2.0
module_mugqic_R_packages=mugqic/mugqic_R_packages/1.0.4
module_mugqic_tools=mugqic/mugqic_tools/2.1.5
module_pandoc=mugqic/pandoc/1.15.2
module_perl=mugqic/perl/5.22.1
module_picard=mugqic/picard/2.0.1
module_python=mugqic/python/2.7.11
module_R=mugqic/R_Bioconductor/3.2.3_3.2
module_samtools=mugqic/samtools/1.3
module_trim_galore=trim_galore/0.4.1

## The settings below are the safest to modify. Just ensure that they are high
## enough to prevent running out of time or memory.
# Default job attributes
cluster_mem = -l vmem=12gb,mem=8gb
cluster_walltime = -l walltime=18:00:00
cluster_cpu = -l nodes=1:ppn=1
cluster_other_arg = -W umask=0002 -W group_list=brudno

# Default Java parameters
java_other_options = -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304

# GEONME 
scientific_name=Homo_sapiens
assembly=GRCh37
source=Ensembl
version=75
#assembly_dir=$MUGQIC_INSTALL_HOME/genomes/species/%(scientific_name)s.%(assembly)s
MUGQIC_INSTALL_HOME=/hpf/tools/centos6/mugqic-pipelines/source/resource
assembly_dir=%(MUGQIC_INSTALL_HOME)s/genomes/species/%(scientific_name)s.%(assembly)s
annotations_prefix=%(assembly_dir)s/annotations/%(scientific_name)s.%(assembly)s.%(source)s%(version)s
gtf=%(annotations_prefix)s.gtf

##################################################
## Settings for running episeq.py with --report ##
##################################################
[report]
title=EpiSeq Pipeline

############
## Step 1 ##
############
# genome_file=The reference sequence file that we want to align the reads against.
# verbose=Make output log more verbose.
[bismark_prepare_genome]
genome_file=/hpf/projects/brudno/lmichael/episeq_run/Homo_sapiens.hg19.fa
verbose=True
cluster_cpu=-l nodes=1:ppn=4
cluster_mem=-l vmem=16gb,mem=16gb
cluster_walltime=-l walltime=6:00:00
# Note that some steps have their own additional settings that can be used.

############
## Step 2 ##
############
[pre_qc_check]
cluster_cpu=-l nodes=1:ppn=4
cluster_mem=-l vmem=8gb,mem=4gb
cluster_walltime=-l walltime=1:00:00
other_options=-t 12
# For more information about possible other_options, see `module load fastqc; fastqc --help`
# -t <int>         Number of open files at once. Each thread lets fastqc run
# --threads <int>  with 250MB of memory.
#
# -c               Specifies a non-default file which contains the list of
# --contaminants   contaminants to screen overrepresented sequences against.
#                  The file must contain sets of named contaminants in the
#                  form name[tab]sequence. Lines prefixed with a hash will be ignored
#
# -a               Specifies a non-default file which contains the list of
# --adapters       adapter sequences which will be explicity searched against
#                  the library. The file must contain sets of named adapters
#                  in the form name[tab]sequence.  Lines prefixed with a hash
#                  will be ignored.
#
# -k --kmers       Specifies the length of Kmer to look for in the Kmer content
#                  module. Specified Kmer length must be between 2 and 10. Default
#                  length is 7 if not specified.

############
## Step 3 ##
############
[trim_galore]
cluster_cpu=-l nodes=1:ppn=4
cluster_mem=-l vmem=8gb,mem=4gb
cluster_walltime=-l walltime=6:00:00
other_options=--fastqc_args "-t 12" --gzip
# For more information about options, see `module load trim_galore; trim_galore --help`.

############
## Step 4 ##
############
# For more information about options, see `module load bismark; bismark --help`.
[bismark_align]
cluster_cpu=-l nodes=1:ppn=5
cluster_mem=-l vmem=24gb,mem=24gb,gres=localhd:24gb
cluster_walltime=-l walltime=48:00:00
other_options=--nucleotide_coverage -p 4 -un --ambiguous --dovetail

############
## Step 5 ##
############
[merge_bismark_alignment_report]
cluster_cpu=-l nodes=1:ppn=1
cluster_mem=-l vmem=4gb,mem=4gb
cluster_walltime=-l walltime=1:00:00

############
## Step 6 ##
############
# The following two sections are actually from the same step, "picard_merge_sam_files"
# The section below is for samples with more than 1 readset. (i.e. A sample that needs merging.)
[picard_merge_sam_files]
# max_records_in_ram=Limits the amount of data Picard processes at once. The higher => the faster.
# ram=Tells JVM to limit its heap accordingly.
# java_other_options=Additional flags to add to java commands.
max_records_in_ram=750000
ram=18G
java_other_options=
cluster_cpu=-l nodes=1:ppn=2
cluster_mem=-l vmem=32gb,mem=16gb
cluster_walltime=-l walltime=24:00:00

# The following section is for samples who does not need any merging, i.e. only one readset.
[symlink_readset_sample_bam]
cluster_cpu=-l nodes=1:ppn=1
cluster_mem=-l vmem=512mb,mem=512mb
cluster_walltime=-l walltime=00:05:00

##############
## Step 7+9 ##
##############
# The following section is actually two different steps that does the same thing.
# In step 7, we calculate the coverage of the merged file.
# In step 9, we calculate the coverage of the deduplicated file.
[bam2nuc]
cluster_cpu=-l nodes=1:ppn=2
cluster_mem=-l vmem=8gb,mem=8gb
cluster_walltime=-l walltime=9:00:00

############
## Step 8 ##
############
# Similar to step 6, different job names indicate whether it needs to be processed or not.
[bismark_deduplicate]
cluster_cpu=-l nodes=1:ppn=2
cluster_mem=-l vmem=64gb,mem=64gb
cluster_walltime=-l walltime=12:00:00
other_options=

# Generally any RRBS datasets skip deduplication.
[skip_rrbs_deduplicate]
cluster_cpu=-l nodes=1:ppn=1
cluster_mem=-l vmem=1gb,mem=1gb
cluster_walltime=-l walltime=00:05:00

#############
## Step 10 ##
#############
# cores=The number of processes to use. Note that each process needs 4 or so threads to run.
[bismark_methylation_caller]
cores=8
cluster_cpu=-l nodes=1:ppn=16
cluster_mem=-l vmem=32gb,mem=24gb
cluster_walltime = -l walltime=24:00:00
other_options=--buffer_size 16G --ample_memory

#############
## Step 11 ##
#############
[bismark_report]
cluster_cpu=-l nodes=1:ppn=1
cluster_mem=-l vmem=1gb,mem=1gb
cluster_walltime=-l walltime=00:15:00



#############
## Step 12 ##
#############
# read_coverage=The minimum read depth to perform analysis at a CpG site
[methylation_value_metrics]
read_coverage=10
cluster_cpu=-l nodes=1:ppn=1
cluster_mem=-l vmem=12gb,mem=12gb
cluster_walltime=-l walltime=01:00:00



#############
## Step 13 ##
#############
# read_coverage=The minimum read depth to perform analysis at a CpG site.
# padjust_method=One of 'none', 'bonferroni', or 'fdr'.
# pvalue=Cutoff p-value to filter by, [0,1]
# delta_beta_threshold=The threshold value for the delta_beta metric.
[differential_methylated_pos]
read_coverage=10
padjust_method=fdr
pvalue=0.05
delta_beta_threshold=0.2
cluster_cpu=-l nodes=1:ppn=8
cluster_mem=-l vmem=72gb,mem=72gb
cluster_walltime = -l walltime=03:00:00

[dmp_metrics]
cluster_cpu=-l nodes=1:ppn=1
cluster_mem=-l vmem=12gb,mem=12gb
cluster_walltime=-l walltime=01:00:00

#############
## Step 14 ##
#############
# read_coverage=The minimum read depth to perform analysis at a CpG site.
# padjust_method=One of 'none', 'bonferroni', or 'fdr'.
# pvalue=Cutoff p-value to filter by, [0,1]
# permutations=Number of permutations to use when running the bumphunting algorithm
# delta_beta_threshold=The threshold value for the delta_beta metric.
[differential_methylated_regions]
read_coverage=10
padjust_method=fdr
pvalue=0.05
permutations=10
delta_beta_threshold=0.2
cluster_cpu=-l nodes=1:ppn=4
cluster_mem=-l vmem=100gb,mem=100gb
cluster_walltime = -l walltime=03:00:00

[dmr_metrics]
cluster_cpu=-l nodes=1:ppn=1
cluster_mem=-l vmem=12gb,mem=12gb
cluster_walltime=-l walltime=01:00:00


#############
## STEP 15 ##
#############
[prepare_annotations]
cluster_cpu=-l nodes=1:ppn=1
cluster_mem=-1 vmem=8gb,mem=8gb
cluster_walltime=-l walltime=01:00:00

#############
## STEP 16 ##
#############
# promoter_distance=distance from transcript start site within which regions are considered promoters
# distance_type=whether the distance should be computed to 'any' part of the 
#   transcript or the 'fiveprime' end
# skip_exons=whether the annotation of exons should be skipped
[annotate_regions]
promoter_distance=2500
distance_type=any
skip_exons=False
cluster_cpu=-l nodes=1:ppn=1
cluster_mem=-l vmem=48gb,mem=48gb
cluster_walltime=-l walltime=08:00:00



#############
## STEP 17 ##
#############
# promoter_distance=distance from transcript start site within which regions are considered promoters
# distance_type=whether the distance should be computed to 'any' part of the 
#   transcript or the 'fiveprime' end
# skip_exons=whether the annotation of exons should be skipped
[annotate_positions]
promoter_distance=2500
distance_type=any
skip_exons=False
cluster_cpu=-l nodes=1:ppn=1
cluster_mem=-l vmem=48gb,mem=48gb
cluster_walltime=-l walltime=08:00:00
